External tests associated with 3-say_my_name.py.

# 0 - Module import
>>> say_my_name = __import__('3-say_my_name').say_my_name

# 1 - Strings test
>>> say_my_name("John", "Smith")
My name is John Smith

# 2 - One argument test
>>> say_my_name("Bob")
My name is Bob 

# 3 - Different type test
>>> say_my_name(12, "White")
Traceback (most recent call last):
	...
TypeError: first_name must be a string

# 4 - Different type test
>>> say_my_name("Walter", 12)
Traceback (most recent call last):
	...
TypeError: last_name must be a string

# 5 - No argument test
>>> say_my_name()
Traceback (most recent call last):
	...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'

# 6 - Executable file test
>>> import os
>>> print(os.access("3-say_my_name.py", os.X_OK))
True

# 7 - The file exist test
>>> f = open("3-say_my_name.py")
>>> f.close()

# 8 - Function documentation
>>> import re
>>> func_doc = (say_my_name.__doc__)
>>> len(func_doc.splitlines()) > 4
True

# 9 - New line test
>>> with open("3-say_my_name.py", "r") as file:
...     for last_line in file:
...             pass
...     for new_line in last_line:
...             pass
...     if new_line == '\n':
...             print(True)
True

# 10 - Shebang test
>>> with open("3-say_my_name.py", "r") as file:
...		first_line = file.readline()
...		if first_line.strip() == "#!/usr/bin/python3":
...			print(True)
True

# 11 - pep8 style test
>>> import os
>>> os.popen("pep8 3-say_my_name.py").read()
''

# 12 - Readme file test
>>> import os
>>> readme_file = os.getcwd() + '/README.md'
>>> os.stat(readme_file).st_size != 0
True

# 13 - Module documentation
>>> lines = (__import__("3-say_my_name").__doc__).count('\n')
>>> lines >= 5
True
